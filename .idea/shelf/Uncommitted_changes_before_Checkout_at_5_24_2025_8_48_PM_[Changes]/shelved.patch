Index: src/main/java/handler/RestaurantHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/handler/RestaurantHandler.java b/src/main/java/Handler/RestaurantHandler.java
rename from src/main/java/handler/RestaurantHandler.java
rename to src/main/java/Handler/RestaurantHandler.java
--- a/src/main/java/handler/RestaurantHandler.java	(revision 3962eeb5aa16bd3623078538e83ec3162321fcf8)
+++ b/src/main/java/Handler/RestaurantHandler.java	(date 1748106296549)
@@ -1,25 +1,24 @@
-package handler;
+package Handler;
 
 import com.google.gson.Gson;
 import com.google.gson.JsonSyntaxException;
 import com.sun.net.httpserver.HttpExchange;
 import com.sun.net.httpserver.HttpHandler;
-import controller.RestaurantController;
+import Controller.RestaurantController;
 import exception.InvalidInputException;
 import model.Restaurant;
 
 import java.io.BufferedReader;
 import java.io.IOException;
-import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.OutputStream;
 
 public class RestaurantHandler implements HttpHandler {
-    private RestaurantController restaurantController=new RestaurantController();
+    private final RestaurantController restaurantController = new RestaurantController();
 
 
     @Override
-    public void handle (HttpExchange exchange ) throws IOException {
+    public void handle(HttpExchange exchange) throws IOException {
         String method = exchange.getRequestMethod();
         String path = exchange.getRequestURI().getPath();
         String contentType = exchange.getRequestHeaders().getFirst("Content-Type");
@@ -32,6 +31,7 @@
         }
 
     }
+
     private void createRestaurant(HttpExchange exchange) throws IOException {
         StringBuilder jsonBody = new StringBuilder();
         try (BufferedReader reader = new BufferedReader(new InputStreamReader(exchange.getRequestBody()))) {
@@ -47,27 +47,25 @@
         System.out.println("Received JSON: " + json);
         String response = "";
         Restaurant restaurant = null;
-        try{
-        restaurant= new Gson().fromJson(json, Restaurant.class);
-            response=restaurantController.createRestaurant(restaurant);
+        try {
+            restaurant = new Gson().fromJson(json, Restaurant.class);
+            response = restaurantController.createRestaurant(restaurant);
             System.out.println("Created restaurant " + restaurant.getTitle());
-        }
-        catch (JsonSyntaxException e)
-        {
+        } catch (JsonSyntaxException e) {
             // Specific catch for GSON parsing errors
             System.err.println("JSON Parsing Error: " + e.getMessage());
             e.printStackTrace(); // THIS IS IMPORTANT: Print the stack trace!
             sendErrorResponse(exchange, 400, "Invalid JSON format: " + e.getMessage());
-        }catch (InvalidInputException e) {
-            sendErrorResponse(exchange,e.getStatusCode(), e.getMessage());
+        } catch (InvalidInputException e) {
+            sendErrorResponse(exchange, e.getStatusCode(), e.getMessage());
             System.out.println("Restaurant " + restaurant.getTitle() + " is invalid");
-        }
-        catch (Exception e) {
+        } catch (Exception e) {
             sendErrorResponse(exchange, 500, e.getMessage());
         }
-        sendResponse(exchange,201,response,"application/json");
+        sendResponse(exchange, 201, response, "application/json");
 
     }
+
     private void sendResponse(HttpExchange exchange, int statusCode, String responseBody, String contentType) throws IOException {
         exchange.getResponseHeaders().set("Content-Type", contentType);
         exchange.sendResponseHeaders(statusCode, responseBody.getBytes().length);
